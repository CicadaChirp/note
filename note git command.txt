修改用户名和邮件
git config --global user.name "xxxx"
git config --global user.email "xxxx"
查看用户名和邮件
git config user.name
git config user.email

创建目录文件夹
mkdir xxxx	
打开目录文件夹
cd xxxx
查看当前文件夹名
pwd

在当前文件夹创建版本库
git init
将文件添加到仓库，可多次添加多个文件，在一次性提交
git add "xxxx"
将文件提交到仓库，并问本次操作命名
git commit -m "xxxx"

查看版本库状态
git status
查看版本库修改
git diff

查看版本信息
git log --pretty=oneline
重置当前版本
git reset --hard commit_id
版本commit_id排序
HEAD HEAD^ HEAD^^ HEAD@{3} HEAD@{4}
查看之前版本信息
git reflog --pretty=oneline

撤销文件在工作区的修改
git checkout -- file

从版本库中删除文件，之后接git commit
git rm



所以，git add命令实际上就是把要提交的所有修改放到暂存区（Stage），
然后，执行git commit就可以一次性把暂存区的所有修改提交到分支

命令git checkout -- readme.txt意思就是，把readme.txt文件在工作区的修改全部撤销，这里有两种情况：
一种是readme.txt自修改后还没有被放到暂存区，现在，撤销修改就回到和版本库一模一样的状态；
一种是readme.txt已经添加到暂存区后，又作了修改，现在，撤销修改就回到添加到暂存区后的状态。
总之，就是让这个文件回到最近一次git commit或git add时的状态




首先启动一个Git Bash窗口（非Windows用户直接打开终端）
执行：
cd ~/.ssh
如果返回“… No such file or directory”，说明没有生成过SSH Key，直接进入第4步。否则进入第3步备份!
备份：
mkdir key_backup mv id_isa* key_backup
生成新的Key：（引号内的内容替换为你自己的邮箱）
ssh-keygen -t rsa -C "your_email@youremail.com"
输出显示：
>Generating public/private rsa key pair. Enter file in which to save the key 
(/Users/your_user_directory/.ssh/id_rsa):<press enter>
直接回车，不要修改默认路劲。
>Enter passphrase (empty for no passphrase):<enter a passphrase>
Enter same passphrase again:<enter passphrase again>
设置一个密码短语，在每次远程操作之前会要求输入密码短语！闲麻烦可以直接回车，不设置。
成功：
Your identification has been saved in /Users/your_user_directory/.ssh/id_rsa. Your public key has been saved in /Users/your_user_directory/.ssh/id_rsa.pub. The key fingerprint is: ... ...
提交公钥：
6.1 找到.ssh文件夹，用文本编辑器打开“id_rsa.pub”文件，复制内容到剪贴板。
6.2 打开 https://github.com/settings/ssh ，点击 Add SSH Key 按钮，粘贴进去保存即可。